---
import type { Job } from "@/api/works";

interface Props {
  job: Job;
}

const { job } = Astro.props as Props;
---

<div
  class="imagesContainer overflow-hidden py-8 md:py-0 md:px-8 w-full h-full max-h-[436px] gap-4 flex flex-col md:flex-row"
>
  <div class="up w-full h-full flex flex-row md:flex-col gap-4">
    {
      job.gallery
        .map((image, index) => (
          <img
            data-image-index={index}
            class="gallery-image max-w-[200px] rounded-md cursor-pointer hover:scale-105 duration-300"
            src={image.tinyImage}
            alt={image.alt}
          />
        ))
        .filter((_, index) => index % 2 == 0)
    }
    {
      job.gallery
        .map((image, index) => (
          <img
            data-image-index={index}
            class="gallery-image max-w-[200px] rounded-md cursor-pointer hover:scale-105 duration-300"
            src={image.tinyImage}
            alt={image.alt}
          />
        ))
        .filter((_, index) => index % 2 == 0)
    }
  </div>

  <div class="down w-full h-full flex flex-row md:flex-col gap-4">
    {
      job.gallery
        .map((image, index) => (
          <img
            data-image-index={index}
            class="gallery-image max-w-[200px] rounded-md cursor-pointer hover:scale-105 duration-300"
            src={image.tinyImage}
            alt={image.alt}
          />
        ))
        .filter((_, index) => index % 2 != 0)
    }
    {
      job.gallery
        .map((image, index) => (
          <img
            data-image-index={index}
            class="gallery-image max-w-[200px] rounded-md cursor-pointer hover:scale-105 duration-300"
            src={image.tinyImage}
            alt={image.alt}
          />
        ))
        .filter((_, index) => index % 2 != 0)
    }

    <div id="gallery" class="h-0 sr-only">
      {
        job.gallery.map((image, index) => (
          <a
            id={`image-${index}`}
            href={image.image}
            target="_blank"
            data-pswp-width={image.width}
            data-pswp-height={image.height}
          />
        ))
      }
    </div>
  </div>
</div>

<style>
  .imagesContainer > .up {
    animation: scrollVerticalRight 10s linear infinite;
  }

  .imagesContainer > .up:hover {
    animation: scrollVerticalRight 10s linear infinite;
    animation-play-state: paused;
  }

  .imagesContainer > .down {
    animation: scrollVerticalLeft 10s linear infinite;
  }

  .imagesContainer > .down:hover {
    animation: scrollVerticalLeft 10s linear infinite;
    animation-play-state: paused;
  }

  @media (min-width: 768px) {
    .imagesContainer > .up {
      animation: scrollVerticalUp 10s linear infinite;
    }

    .imagesContainer > .up:hover {
      animation: scrollVerticalUp 10s linear infinite;
      animation-play-state: paused;
    }

    .imagesContainer > .down {
      animation: scrollVerticalDown 10s linear infinite;
    }

    .imagesContainer > .down:hover {
      animation: scrollVerticalDown 10s linear infinite;
      animation-play-state: paused;
    }
  }

  @keyframes scrollVerticalUp {
    0% {
      transform: translateY(0%);
    }
    100% {
      transform: translateY(-50%);
    }
  }

  @keyframes scrollVerticalRight {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  @keyframes scrollVerticalDown {
    0% {
      transform: translateY(-50%);
    }
    100% {
      transform: translateY(0%);
    }
  }

  @keyframes scrollVerticalLeft {
    0% {
      transform: translateX(-50%);
    }
    100% {
      transform: translateX(0%);
    }
  }
</style>

<script>
  import PhotoSwipeLightbox from "photoswipe/lightbox";
  document.addEventListener("astro:page-load", () => {
    const lightbox = new PhotoSwipeLightbox({
      gallery: "#gallery",
      children: "a",
      pswpModule: () => import("photoswipe"),
    });
    lightbox.init();

    document.querySelectorAll(".gallery-image").forEach((image) => {
      image.addEventListener("click", (e) => {
        const target = e.target as HTMLElement;
        const imageIndex = target.getAttribute("data-image-index");
        const lightboxElem = document.getElementById(`image-${imageIndex}`);
        if (!lightboxElem) return;

        lightboxElem.click();
      });
    });
  });
</script>
