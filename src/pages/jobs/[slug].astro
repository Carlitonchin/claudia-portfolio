---
import { getJobs } from "@/api/works";
import Button from "@/components/Button.astro";
import Card from "@/components/Card.astro";
import Title from "@/components/Title.astro";
import Layout from "@/layouts/Layout.astro";
const jobs = await getJobs();
export async function getStaticPaths() {
  const jobs = await getJobs();
  return jobs.map((job) => {
    return { params: { slug: job.slug } };
  });
}

const { slug } = Astro.params;
const job = jobs.find((job) => job.slug == slug)!;
---

<Layout title={"Claudia Marin | " + job.name}>
  <main class="flex flex-col md:flex-row w-full h-fit gap-4">
    <Card props={{
      "data-delayanimation": "100"
    }} className="js-scroll">
      <img
        class="mb-2 rounded-full row-span-2"
        width="40"
        height="40"
        alt={job.altLogo}
        src={job.logo}
      />
      <Title variant="h1" size="large">{job.mainTitle}</Title>
      <p class="mt-2">{job.principalDescription}</p>
    </Card>
    <img
    data-delayanimation="300"
      src={job.mainImage}
      alt={job.altMainImage}
      class="js-scroll w-full rounded-xl md:max-w-[350px] aspect-square"
    />
  </main>
  <Card
  props={{
    "data-delayanimation": "500"
  }}
    className="js-scroll mt-4 mb-4 w-full h-fit md:max-h-[500px] overflow-hidden flex flex-col-reverse md:flex-row md:items-center"
  >
    <div class="imagesContainer overflow-hidden py-8 md:py-0 md:px-8 w-full h-full max-h-[436px] gap-4 flex flex-col md:flex-row">
      <div class="up w-full h-full flex flex-row md:flex-col gap-4">
      {
        job.gallery.map((image) => (
          <img
            class="max-w-[200px] rounded-md cursor-pointer hover:scale-105 duration-300"
            src={image}
            alt={"Galeria de claudia no seu trabalho " + job.name}
          />
        )).filter((_, index) => index % 2 == 0)
      }
      {
        job.gallery.map((image) => (
          <img
            class="max-w-[200px] rounded-md cursor-pointer hover:scale-105 duration-300"
            src={image}
            alt={"Galeria de claudia no seu trabalho " + job.name}
          />
        )).filter((_, index) => index % 2 == 0)
      }
      </div>

      <div class="down w-full h-full flex flex-row md:flex-col gap-4">
        {
          job.gallery.map((image) => (
            <img
              class="max-w-[200px] rounded-md cursor-pointer hover:scale-105 duration-300"
              src={image}
              alt={"Galeria de claudia no seu trabalho " + job.name}
            />
          )).filter((_, index) => index % 2 != 0)
        }
        {
          job.gallery.map((image) => (
            <img
              class="max-w-[200px] rounded-md cursor-pointer hover:scale-105 duration-300"
              src={image}
              alt={"Galeria de claudia no seu trabalho " + job.name}
            />
          )).filter((_, index) => index % 2 != 0)
        }
        </div>
    </div>
    <div class="w-full h-fit">
      <Title className="mb-2" variant="h2" size="large">
        {job.secondaryTitle}
      </Title>
      <p class="mb-4">
        {job.secondaryDescription}
      </p>
      <a href={job.url} target="_blank">
      <Button>
        Saiba mais
      </Button>
    </a>
    </div>
  </Card>
</Layout>

<style>
.imagesContainer > .up {
    animation: scrollVerticalRight 10s linear infinite;
}

.imagesContainer > .up:hover {
    animation: scrollVerticalRight 10s linear infinite;
    animation-play-state: paused;
}

.imagesContainer > .down {
    animation: scrollVerticalLeft 10s linear infinite;
}

.imagesContainer > .down:hover {
    animation: scrollVerticalLeft 10s linear infinite;
    animation-play-state: paused;
}

@media (min-width: 768px) {
  .imagesContainer > .up {
    animation: scrollVerticalUp 10s linear infinite;
}

.imagesContainer > .up:hover {
    animation: scrollVerticalUp 10s linear infinite;
    animation-play-state: paused;
}

.imagesContainer > .down {
    animation: scrollVerticalDown 10s linear infinite;
}

.imagesContainer > .down:hover {
    animation: scrollVerticalDown 10s linear infinite;
    animation-play-state: paused;
}
}

@keyframes scrollVerticalUp {
    0% {
        transform: translateY(0%);
    }
    100% {
        transform: translateY(-50%);
    }
}

@keyframes scrollVerticalRight {
    0% {
        transform: translateX(0%);
    }
    100% {
        transform: translateX(-50%);
    }
}

@keyframes scrollVerticalDown {
    0% {
        transform: translateY(-50%);
    }
    100% {
        transform: translateY(0%);
    }
}

@keyframes scrollVerticalLeft {
    0% {
        transform: translateX(-50%);
    }
    100% {
        transform: translateX(0%);
    }
}
</style>
